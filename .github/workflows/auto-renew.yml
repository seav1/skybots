name: Auto Renew Skybots

on:
  schedule:
    # 每7天运行一次 (UTC 时间 00:00)
    - cron: '0 0 */7 * *'
  workflow_dispatch: # 允许手动触发

jobs:
  renew:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test cookie and renew
        env:
          SKYBOTS_COOKIES: ${{ secrets.SKYBOTS_COOKIES }}
        run: |
          # 首先测试 cookie 是否有效
          echo "=== 测试 Cookie 有效性 ==="
          response=$(curl -s -i -L \
            -H "Cookie: $SKYBOTS_COOKIES" \
            -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36" \
            "https://skybots.tech/dashboard/my-projects")
          
          echo "$response" > response.html
          
          # 检查是否重定向到登录页
          if echo "$response" | grep -iq "location:.*discord\|location:.*login"; then
            echo "❌ Cookie 已过期，正在重定向到登录页"
            echo "需要重新获取 Cookie"
            exit 1
          fi
          
          # 检查响应中是否包含 Discord 登录相关内容
          if echo "$response" | grep -iq "discord"; then
            echo "⚠️  响应中包含 Discord 相关内容"
          fi
          
          # 检查状态码
          status_code=$(echo "$response" | grep "HTTP/" | tail -1 | awk '{print $2}')
          echo "HTTP 状态码: $status_code"
          
          if [ "$status_code" = "200" ]; then
            echo "✓ Cookie 有效，成功访问页面"
            
            # 检查页面内容
            echo ""
            echo "=== 检查页面内容 ==="
            
            # 查找续期按钮
            if grep -q "Renouveler" response.html; then
              echo "✓ 找到 'Renouveler' 按钮，需要续期"
              # 这里需要点击按钮，但 curl 无法做到
              echo "⚠️  需要使用浏览器自动化工具来点击按钮"
            elif grep -q "Statut" response.html; then
              echo "✓ 显示 'Statut'，无需续期"
            else
              echo "⚠️  未找到预期的按钮"
            fi
            
            # 显示部分页面内容用于调试
            echo ""
            echo "=== 页面内容片段 ==="
            grep -o "<button[^>]*>.*Renouveler.*</button>" response.html | head -5 || echo "未找到 Renouveler 按钮"
            
          else
            echo "❌ 访问失败，状态码: $status_code"
            exit 1
          fi

      - name: Upload response for debugging
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: response-html
          path: response.html
          if-no-files-found: ignore

      - name: Setup Python if cookie valid
        if: success()
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies if cookie valid
        if: success()
        run: |
          pip install selenium

      - name: Install Chrome if cookie valid
        if: success()
        uses: browser-actions/setup-chrome@v1

      - name: Install ChromeDriver if cookie valid
        if: success()
        uses: nanasess/setup-chromedriver@v2

      - name: Create and run renewal script
        if: success()
        env:
          SKYBOTS_COOKIES: ${{ secrets.SKYBOTS_COOKIES }}
        run: |
          cat > renew.py << 'PYEOF'
          import os
          import time
          from selenium import webdriver
          from selenium.webdriver.common.by import By
          from selenium.webdriver.support.ui import WebDriverWait
          from selenium.webdriver.support import expected_conditions as EC
          from selenium.webdriver.chrome.options import Options

          chrome_options = Options()
          chrome_options.add_argument('--headless=new')
          chrome_options.add_argument('--no-sandbox')
          chrome_options.add_argument('--disable-dev-shm-usage')
          chrome_options.add_argument('--disable-blink-features=AutomationControlled')
          chrome_options.add_experimental_option("excludeSwitches", ["enable-automation"])
          chrome_options.add_experimental_option('useAutomationExtension', False)
          
          driver = webdriver.Chrome(options=chrome_options)
          
          try:
              # 先访问主域名
              driver.get('https://skybots.tech')
              time.sleep(2)
              
              # 添加 cookies
              cookie_string = os.environ.get('SKYBOTS_COOKIES', '')
              for cookie in cookie_string.split('; '):
                  if '=' in cookie:
                      name, value = cookie.split('=', 1)
                      driver.add_cookie({
                          'name': name.strip(),
                          'value': value.strip(),
                          'domain': '.skybots.tech'
                      })
              
              # 访问目标页面
              driver.get('https://skybots.tech/dashboard/my-projects')
              time.sleep(5)
              
              driver.save_screenshot('page.png')
              
              # 查找并点击续期按钮
              buttons = driver.find_elements(By.XPATH, "//button[contains(., 'Renouveler')]")
              
              if buttons:
                  print(f'找到 {len(buttons)} 个续期按钮')
                  buttons[0].click()
                  time.sleep(3)
                  print('✅ 已点击续期按钮')
                  
                  # 获取新 cookies
                  new_cookies = driver.get_cookies()
                  cookie_str = '; '.join([f"{c['name']}={c['value']}" for c in new_cookies])
                  print(f'NEW_COOKIES={cookie_str}')
              else:
                  print('✅ 无需续期')
              
          finally:
              driver.quit()
          PYEOF
          
          python renew.py

      - name: Upload screenshot
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: screenshot
          path: page.png
          if-no-files-found: ignore
